name: build-openwrt-leno-firmware

on: 
  push:
    tags: 
      - 'v0.14.1'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  CONFIG_FILE: config.new
  FREE_UP_DISK: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      
      - name: Checkout
        uses: actions/checkout@master

      - name: Space Cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
  
      - name: make
        working-directory: /workdir
        run: |
          git clone $REPO_URL openwrt
          cd openwrt
          ./scripts/feeds clean
          git clone https://github.com/kenzok8/small package/small
          git clone https://github.com/kenzok8/openwrt-packages package/openwrt-packages
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig
          sed -i 's/192.168.1.1/172.16.32.8/g' .config
          sed -i 's/CONFIG_TARGET_KERNEL_PARTSIZE=16/CONFIG_TARGET_KERNEL_PARTSIZE=256/g' .config
          sed -i 's/CONFIG_TARGET_ROOTFS_PARTSIZE=160/CONFIG_TARGET_ROOTFS_PARTSIZE=1024/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall is not set/CONFIG_PACKAGE_luci-app-passwall=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin is not set/CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs is not set/CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks is not set/CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks is not set/CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan is not set/CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-app-smartdns is not set/CONFIG_PACKAGE_luci-app-smartdns=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_smartdns is not set/CONFIG_PACKAGE_smartdns=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_open-vm-tools is not set/CONFIG_PACKAGE_open-vm-tools=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-theme-material is not set/CONFIG_PACKAGE_luci-theme-material=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-theme-netgear is not set/CONFIG_PACKAGE_luci-theme-netgear=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-theme-opentomato is not set/CONFIG_PACKAGE_luci-theme-opentomato=y/g' .config
          sed -i 's/# CONFIG_PACKAGE_luci-theme-opentomcat is not set/CONFIG_PACKAGE_luci-theme-opentomcat=y/g' .config
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          grep x86 .config
          grep passwall .config
          grep ssr .config 
          make -j$(nproc) || make -j1 V=s
          echo "::set-output name=status::success"
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
          echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Upload bin directory
        uses: actions/upload-artifact@master
        if: steps.compile.outputs.status == 'success'
        with:
          name: OpenWrt-${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: /workdir/openwrt/bin

      - name: Upload firmware to cowtransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt/bin 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      
      - name: Upload firmware to WeTransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress /workdir/openwrt/bin 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"