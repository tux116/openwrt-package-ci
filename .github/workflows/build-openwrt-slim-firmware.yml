name: build-openwrt-slim-firmware

on: 
  push:
    tags: 
      - 'v0.14.13'

env:
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:

  build_openwrt:

    name: Build OpenWrt and release
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install tree build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: git
        working-directory: /workdir
        run: |
          git clone https://github.com/quintus-lab/lede-openwrt-ci.git openwrt
          cd openwrt
          cd package
          rm -rf lean/luci-app-frpc/
          rm -rf lean/luci-app-dockerman/
          rm -rf lean/luci-app-diskman/
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat.git
          git clone https://github.com/kuoruan/luci-app-frpc.git
          git clone https://github.com/lisaac/luci-app-dockerman.git
          git clone https://github.com/lisaac/luci-app-diskman.git
          git clone -b master --single-branch https://github.com/destan19/OpenAppFilter package/new/OpenAppFilter
          svn co https://github.com/Lienol/openwrt-package/trunk/lienol/luci-app-trojan-server luci-app-trojan-server
          git clone --single-branch -b openwrt-18.06 https://github.com/project-openwrt/openwrt.git --depth=1 ctcgfw
          mv ctcgfw/package/ctcgfw/gost .
          mv ctcgfw/package/ctcgfw/luci-app-gost .
          rm -rf ctcgfw

      - name: feeds
        working-directory: /workdir
        run: |
          cd openwrt
          sed -i '5s/#src-git/src-git/g' feeds.conf.default
          echo "src-git OpenAppFilter https://github.com/destan19/OpenAppFilter" >> ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: configuration
        working-directory: /workdir
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF
          # vmware 固件支持
          cat >> .config <<EOF
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          CONFIG_TARGET_EXT4_RESERVED_PCT=0
          CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y
          CONFIG_TARGET_EXT4_BLOCKSIZE=4096
          CONFIG_VMDK_IMAGES=y
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          #cat >> .config <<EOF
          #CONFIG_EFI_IMAGES=y
          #EOF
          # 设置固件大小:
          cat >> .config <<EOF
          CONFIG_TARGET_KERNEL_PARTSIZE=256
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          EOF
          # 设置固件默认IP
          cat >> .config <<EOF
          CONFIG_TARGET_PREINIT_IP="172.16.32.8"
          CONFIG_TARGET_PREINIT_BROADCAST="172.16.32.255"
          EOF
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          CONFIG_PACKAGE_kmod-fs-f2fs=y
          CONFIG_PACKAGE_kmod-fs-cifs=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 虚拟化支持：
          cat >> .config <<EOF
          # CONFIG_PACKAGE_open-vm-tools=y
          # CONFIG_PACKAGE_kmod-kvm-amd is not set
          # CONFIG_PACKAGE_kmod-kvm-intel is not set
          # CONFIG_PACKAGE_kmod-kvm-x86 is not set
          EOF
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_luci-app-adbyby-plus=y
          #CONFIG_PACKAGE_luci-app-aria2=y
          #CONFIG_PACKAGE_luci-app-baidupcs-web=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-frps=y
          #CONFIG_PACKAGE_luci-app-hd-idle=y
          #CONFIG_PACKAGE_luci-app-kodexplorer=y
          #CONFIG_PACKAGE_luci-app-minidlna=y
          #CONFIG_PACKAGE_luci-app-openvpn=y
          #CONFIG_PACKAGE_luci-app-openvpn-server=y
          #CONFIG_PACKAGE_luci-app-qbittorrent=y
          #CONFIG_DEFAULT_luci-app-airplay2=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          #CONFIG_PACKAGE_luci-app-v2ray-server=y
          #CONFIG_PACKAGE_luci-app-verysync=y
          #CONFIG_PACKAGE_luci-app-webadmin=y
          #CONFIG_PACKAGE_luci-app-wireguard=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          #CONFIG_PACKAGE_luci-app-cifs-mount=y
          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
          #CONFIG_PACKAGE_netdata=y
          #CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-trojan-server=y
          CONFIG_PACKAGE_luci-app-oaf=y
          EOF
          
          # LuCI主题:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_luci-theme-argon=y
          #CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          EOF
          
          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_zstd=y
          CONFIG_PACKAGE_iperf3=y
          CONFIG_PACKAGE_stress=y
          CONFIG_PACKAGE_frps=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_cifsmount=y
          CONFIG_PACKAGE_lsblk=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_ifstat=y
          CONFIG_PACKAGE_iftop=y
          CONFIG_PACKAGE_bind-dig=y
          CONFIG_PACKAGE_bind-libs=y
          CONFIG_PACKAGE_ifstat=y
          CONFIG_PACKAGE_gost=y
          CONFIG_PACKAGE_nmap=y
          CONFIG_PACKAGE_losetup=y
          CONFIG_PACKAGE_pigz=y
          CONFIG_PACKAGE_arp-scan=y
          CONFIG_PACKAGE_ss=y
          EOF
          
          # Transmission:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_luci-app-transmission=y
          #CONFIG_PACKAGE_luci-i18n-transmission-zh-cn=y
          #CONFIG_PACKAGE_transmission-daemon-openssl=y
          #CONFIG_PACKAGE_transmission-web-control=y
          #CONFIG_PACKAGE_transmission-remote-openssl=y
          EOF
          
          # Diskman:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_luci-app-diskman=y
          #CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
          #CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
          #CONFIG_PACKAGE_luci-app-diskman_INCLUDE_mdadm=y
          #CONFIG_PACKAGE_luci-app-diskman_INCLUDE_kmod_md_raid456=y
          #CONFIG_PACKAGE_luci-app-diskman_INCLUDE_kmod_md_linear=y
          #CONFIG_PACKAGE_parted=y
          #CONFIG_PACKAGE_libblkid=y
          #CONFIG_PACKAGE_blkid=y
          EOF
          
          # Dockerman:
          cat >> .config <<EOF
          #CONFIG_PACKAGE_luci-app-dockerman=y
          #CONFIG_PACKAGE_luci-lib-docker=y
          #CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          #CONFIG_PACKAGE_luci-lib-jsonc=y
          #CONFIG_PACKAGE_docker-ce=y
          EOF
          
          ###---以下为瘦身选项，去掉缺省的luci app及软件包----###
          #禁止openvpn
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-openvpn is not set
          # CONFIG_PACKAGE_luci-app-openvpn-server is not set
          EOF
                    
          # 禁止网易音乐解锁：
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_UnblockNeteaseMusic_Go is not set
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          # CONFIG_PACKAGE_UnblockNeteaseMusic is not set
          # CONFIG_PACKAGE_UnblockNeteaseMusicGo is not set
          EOF
          
          # 禁用广告拦截：
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_PACKAGE_adbyby is not set
          EOF
          
          # 禁止其它默认app
          cat >> .config <<EOF
          # CONFIG_PACKAGE_autosamba is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_adbyby is not set
          # CONFIG_PACKAGE_luci-app-amule is not set
          # CONFIG_PACKAGE_amule is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_irqbalance is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-airplay2 is not set
          # CONFIG_PACKAGE_luci-app-music-remote-center is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          EOF
          
          # 取消缺省无线网卡驱动
          cat >> .config <<EOF
          # CONFIG_PACKAGE_ath10k-firmware-qca9888 is not set
          # CONFIG_PACKAGE_ath10k-firmware-qca988x is not set
          # CONFIG_PACKAGE_ath10k-firmware-qca9984 is not set
          # CONFIG_PACKAGE_brcmfmac-firmware-43602a1-pcie is not set
          # CONFIG_PACKAGE_ath9k-htc-firmware is not set
          # CONFIG_PACKAGE_kmod-ath9k is not set
          # CONFIG_PACKAGE_kmod-ath9k-htc is not set
          EOF

          cat >> .config << EOF
          CONFIG_PACKAGE_luci-app-n2n_v2=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-oaf=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          EOF
          
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: download
        working-directory: /workdir
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: compile
        working-directory: /workdir
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) V=s || make -j1 V=s
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
          echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: tar
        working-directory: /workdir
        run: |
          cd /workdir/openwrt/bin && tar -zcf ../openwrt.tar.gz *

      - name: upload
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: /workdir/openwrt/openwrt.tar.gz

      - name: upload to cowtransfer
        working-directory: /workdir
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt/openwrt.tar.gz 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
