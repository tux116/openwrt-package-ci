name: build-openwrt-18.06-firmware

on: 
  push:
    tags: 
      - 'v0.14.13'
  watch:
    types: started

env:
  CONFIG_FILE: config.x64
  CONFIG_FILE_PKG: config.pkg
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

      - name: Checkout
        uses: actions/checkout@master
  
      - name: cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo swapoff /swapfile
          sudo docker rmi `docker images -q`
          sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
          sudo -E apt-get -qq install wget build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
    
      - name: complie
        working-directory: /workdir
        run: |
          git clone https://github.com/openwrt/openwrt.git -b openwrt-18.06 openwrt
          cd openwrt
          echo "src-git themes https://github.com/tux116/themes" >> ./feeds.conf.default
          echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default
          echo "src-git OpenAppFilter https://github.com/destan19/OpenAppFilter" >> ./feeds.conf.default
          git clone https://github.com/coolsnowwolf/lede
          mkdir package/other
          cp -r lede/package/lean/{ipt2socks,redsocks2,kcptun,luci-app-ipsec-vpnd,luci-app-n2n_v2,n2n_v2,luci-app-vlmcsd,vlmcsd,microsocks,shadowsocksr-libev,simple-obfs,tcpping,trojan,v2ray-plugin,v2ray,ipset-lists,pdnsd-alt,dns2socks} package/other/
          rm -rf lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          wget https://downloads.openwrt.org/releases/18.06.4/targets/x86/64/config.seed -O ./.config
          cat >>./.config<<EOF
          CONFIG_GRUB_TIMEOUT="0"
          CONFIG_GRUB_TITLE="OpenWrt"
          CONFIG_VMDK_IMAGES=y
          CONFIG_VHD_IMAGES=y
          CONFIG_QCOW2_IMAGES=y
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          # CONFIG_TARGET_ROOTFS_SQUASHFS is not set
          CONFIG_TARGET_KERNEL_PARTSIZE=256
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          CONFIG_TARGET_PREINIT_IP="172.16.32.8"
          CONFIG_TARGET_PREINIT_BROADCAST="172.16.32.255"
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-n2n_v2=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-oaf=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          CONFIG_PACKAGE_luci-theme-opentomato=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          make -j$(($(nproc) + 1)) V=s || make -j1 V=s
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
  
      - name: tar
        working-directory: /workdir
        run: |
          cd /workdir/openwrt/bin && tar -zcf ../openwrt.tar.gz *

      - name: upload
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt-18.06
          path: /workdir/openwrt/openwrt.tar.gz

      - name: upload to cowtransfer
        working-directory: /workdir
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt/openwrt.tar.gz 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

  